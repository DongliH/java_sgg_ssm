<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
<!--    <context:property-placeholder location="jdbc.properties"></context:property-placeholder>-->
    <!-- 配置数据源 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">

        <property name="url" value="jdbc:mysql://localhost:3306/studb"/>
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="username" value="root"/>
        <property name="password" value="666666"/>
    </bean>
<!--    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
<!--        <property name="url" value="${url}"/>-->
<!--        <property name="driverClassName" value="${driver}"/>-->
<!--        <property name="username" value="${username}"/>-->
<!--        <property name="password" value="${password}"/>-->
<!--    </bean>-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>
</beans>
<!--//0.创建一个连接池对象
DruidDataSource dataSource=new DruidDataSource();
dataSource.setUrl("jdbc:mysql:///studb");
//urt地
dataSource.setDriverClassName("com.mysql.cj.jdbc.Driver");
dataSource.setUsername("root");
dataSource.setPassword("root");
//得
1/1.实例化对象盟可
JdbcTemplate jdbcTemplate =new JdbcTemplate();
jdbcTemplate.setDataSource(dataSource);
//2.调用方法即可
// jdbcTemplate.update()DDL DML DCL非查询语句//jdbcTemplate.queryForObject() DQL 查询单个对象// jdbcTemplate.query()DQL 查询集合 -->
